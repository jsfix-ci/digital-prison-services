// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form date picker should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DateTime
    className=""
    closeOnSelect={true}
    closeOnTab={true}
    dateFormat="DD/MM/YYYY"
    defaultValue=""
    input={true}
    inputProps={Object {}}
    isValidDate={[Function]}
    locale="en-GB"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onNavigateBack={[Function]}
    onNavigateForward={[Function]}
    onViewModeChange={[Function]}
    renderInput={[Function]}
    strictParsing={true}
    timeConstraints={Object {}}
    timeFormat={false}
    utc={false}
    value="2019-10-10T:21:00:00Z"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div>
          <StyledHoc
            error="there was an error"
          >
            <StyledHoc>
               
               
            </StyledHoc>
            <StyledHoc>
              there was an error
            </StyledHoc>
            <Input
              className="form-control"
              error="there was an error"
              name="date"
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Select"
              readOnly={true}
              type="text"
              value="2019-10-10T:21:00:00Z"
            />
          </StyledHoc>
        </div>,
        <div
          className="rdtPicker"
        >
          <Unknown
            view="days"
            viewProps={
              Object {
                "addTime": [Function],
                "dateFormat": "DD/MM/YYYY",
                "handleClickOutside": [Function],
                "isValidDate": [Function],
                "localMoment": [Function],
                "renderDay": undefined,
                "renderMonth": undefined,
                "renderYear": undefined,
                "selectedDate": null,
                "setDate": [Function],
                "setTime": [Function],
                "showView": [Function],
                "subtractTime": [Function],
                "timeConstraints": Object {},
                "timeFormat": "",
                "updateOn": "days",
                "updateSelectedDate": [Function],
                "value": "2019-10-10T:21:00:00Z",
                "viewDate": "2019-03-01T00:00:00.000Z",
              }
            }
          />
        </div>,
      ],
      "className": "rdt",
      "eventTypes": Array [
        "mousedown",
        "touchstart",
      ],
      "excludeScrollbar": false,
      "onClickOut": [Function],
      "outsideClickIgnoreClass": "ignore-react-onclickoutside",
      "preventDefault": false,
      "stopPropagation": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "i",
        "nodeType": "host",
        "props": Object {
          "children": <StyledHoc
            error="there was an error"
          >
            <StyledHoc>
               
               
            </StyledHoc>
            <StyledHoc>
              there was an error
            </StyledHoc>
            <Input
              className="form-control"
              error="there was an error"
              name="date"
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              placeholder="Select"
              readOnly={true}
              type="text"
              value="2019-10-10T:21:00:00Z"
            />
          </StyledHoc>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <StyledHoc>
                 
                 
              </StyledHoc>,
              <StyledHoc>
                there was an error
              </StyledHoc>,
              <Input
                className="form-control"
                error="there was an error"
                name="date"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Select"
                readOnly={true}
                type="text"
                value="2019-10-10T:21:00:00Z"
              />,
            ],
            "error": "there was an error",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  " ",
                  undefined,
                  " ",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                undefined,
                " ",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "there was an error",
              },
              "ref": null,
              "rendered": "there was an error",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "form-control",
                "error": "there was an error",
                "name": "date",
                "onChange": [Function],
                "onClick": [Function],
                "onFocus": [Function],
                "onKeyDown": [Function],
                "placeholder": "Select",
                "readOnly": true,
                "type": "text",
                "value": "2019-10-10T:21:00:00Z",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "dt",
        "nodeType": "host",
        "props": Object {
          "children": <Unknown
            view="days"
            viewProps={
              Object {
                "addTime": [Function],
                "dateFormat": "DD/MM/YYYY",
                "handleClickOutside": [Function],
                "isValidDate": [Function],
                "localMoment": [Function],
                "renderDay": undefined,
                "renderMonth": undefined,
                "renderYear": undefined,
                "selectedDate": null,
                "setDate": [Function],
                "setTime": [Function],
                "showView": [Function],
                "subtractTime": [Function],
                "timeConstraints": Object {},
                "timeFormat": "",
                "updateOn": "days",
                "updateSelectedDate": [Function],
                "value": "2019-10-10T:21:00:00Z",
                "viewDate": "2019-03-01T00:00:00.000Z",
              }
            }
          />,
          "className": "rdtPicker",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "view": "days",
            "viewProps": Object {
              "addTime": [Function],
              "dateFormat": "DD/MM/YYYY",
              "handleClickOutside": [Function],
              "isValidDate": [Function],
              "localMoment": [Function],
              "renderDay": undefined,
              "renderMonth": undefined,
              "renderYear": undefined,
              "selectedDate": null,
              "setDate": [Function],
              "setTime": [Function],
              "showView": [Function],
              "subtractTime": [Function],
              "timeConstraints": Object {},
              "timeFormat": "",
              "updateOn": "days",
              "updateSelectedDate": [Function],
              "value": "2019-10-10T:21:00:00Z",
              "viewDate": "2019-03-01T00:00:00.000Z",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div>
            <StyledHoc
              error="there was an error"
            >
              <StyledHoc>
                 
                 
              </StyledHoc>
              <StyledHoc>
                there was an error
              </StyledHoc>
              <Input
                className="form-control"
                error="there was an error"
                name="date"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Select"
                readOnly={true}
                type="text"
                value="2019-10-10T:21:00:00Z"
              />
            </StyledHoc>
          </div>,
          <div
            className="rdtPicker"
          >
            <Unknown
              view="days"
              viewProps={
                Object {
                  "addTime": [Function],
                  "dateFormat": "DD/MM/YYYY",
                  "handleClickOutside": [Function],
                  "isValidDate": [Function],
                  "localMoment": [Function],
                  "renderDay": undefined,
                  "renderMonth": undefined,
                  "renderYear": undefined,
                  "selectedDate": null,
                  "setDate": [Function],
                  "setTime": [Function],
                  "showView": [Function],
                  "subtractTime": [Function],
                  "timeConstraints": Object {},
                  "timeFormat": "",
                  "updateOn": "days",
                  "updateSelectedDate": [Function],
                  "value": "2019-10-10T:21:00:00Z",
                  "viewDate": "2019-03-01T00:00:00.000Z",
                }
              }
            />
          </div>,
        ],
        "className": "rdt",
        "eventTypes": Array [
          "mousedown",
          "touchstart",
        ],
        "excludeScrollbar": false,
        "onClickOut": [Function],
        "outsideClickIgnoreClass": "ignore-react-onclickoutside",
        "preventDefault": false,
        "stopPropagation": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "i",
          "nodeType": "host",
          "props": Object {
            "children": <StyledHoc
              error="there was an error"
            >
              <StyledHoc>
                 
                 
              </StyledHoc>
              <StyledHoc>
                there was an error
              </StyledHoc>
              <Input
                className="form-control"
                error="there was an error"
                name="date"
                onChange={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                placeholder="Select"
                readOnly={true}
                type="text"
                value="2019-10-10T:21:00:00Z"
              />
            </StyledHoc>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <StyledHoc>
                   
                   
                </StyledHoc>,
                <StyledHoc>
                  there was an error
                </StyledHoc>,
                <Input
                  className="form-control"
                  error="there was an error"
                  name="date"
                  onChange={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  placeholder="Select"
                  readOnly={true}
                  type="text"
                  value="2019-10-10T:21:00:00Z"
                />,
              ],
              "error": "there was an error",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    " ",
                    undefined,
                    " ",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  " ",
                  undefined,
                  " ",
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "there was an error",
                },
                "ref": null,
                "rendered": "there was an error",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "form-control",
                  "error": "there was an error",
                  "name": "date",
                  "onChange": [Function],
                  "onClick": [Function],
                  "onFocus": [Function],
                  "onKeyDown": [Function],
                  "placeholder": "Select",
                  "readOnly": true,
                  "type": "text",
                  "value": "2019-10-10T:21:00:00Z",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "dt",
          "nodeType": "host",
          "props": Object {
            "children": <Unknown
              view="days"
              viewProps={
                Object {
                  "addTime": [Function],
                  "dateFormat": "DD/MM/YYYY",
                  "handleClickOutside": [Function],
                  "isValidDate": [Function],
                  "localMoment": [Function],
                  "renderDay": undefined,
                  "renderMonth": undefined,
                  "renderYear": undefined,
                  "selectedDate": null,
                  "setDate": [Function],
                  "setTime": [Function],
                  "showView": [Function],
                  "subtractTime": [Function],
                  "timeConstraints": Object {},
                  "timeFormat": "",
                  "updateOn": "days",
                  "updateSelectedDate": [Function],
                  "value": "2019-10-10T:21:00:00Z",
                  "viewDate": "2019-03-01T00:00:00.000Z",
                }
              }
            />,
            "className": "rdtPicker",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "view": "days",
              "viewProps": Object {
                "addTime": [Function],
                "dateFormat": "DD/MM/YYYY",
                "handleClickOutside": [Function],
                "isValidDate": [Function],
                "localMoment": [Function],
                "renderDay": undefined,
                "renderMonth": undefined,
                "renderYear": undefined,
                "selectedDate": null,
                "setDate": [Function],
                "setTime": [Function],
                "showView": [Function],
                "subtractTime": [Function],
                "timeConstraints": Object {},
                "timeFormat": "",
                "updateOn": "days",
                "updateSelectedDate": [Function],
                "value": "2019-10-10T:21:00:00Z",
                "viewDate": "2019-03-01T00:00:00.000Z",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
