// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NumericInput should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NumericInput
    hint="Enter a value between 1 and 120"
    input={
      Object {
        "name": "age",
        "onChange": [Function],
      }
    }
    label="Age"
    meta={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <StyledHoc>
           
          Age
           
        </StyledHoc>,
        <HintText>
           
          Enter a value between 1 and 120
           
        </HintText>,
        undefined,
        <UNDEFINED
          error={undefined}
          name="age"
          onChange={[Function]}
          type="number"
        />,
      ],
      "error": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            " ",
            "Age",
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          "Age",
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            " ",
            "Enter a value between 1 and 120",
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          "Enter a value between 1 and 120",
          " ",
        ],
        "type": [Function],
      },
      undefined,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "error": undefined,
          "name": "age",
          "onChange": [Function],
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  width: 65px;
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <StyledHoc>
             
            Age
             
          </StyledHoc>,
          <HintText>
             
            Enter a value between 1 and 120
             
          </HintText>,
          undefined,
          <UNDEFINED
            error={undefined}
            name="age"
            onChange={[Function]}
            type="number"
          />,
        ],
        "error": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              " ",
              "Age",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "Age",
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              " ",
              "Enter a value between 1 and 120",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "Enter a value between 1 and 120",
            " ",
          ],
          "type": [Function],
        },
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": undefined,
            "name": "age",
            "onChange": [Function],
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
  width: 65px;
",
              ],
            },
            "displayName": "Styled(Input)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`NumericInput should render with errors 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NumericInput
    hint="Enter a value between 1 and 120"
    input={
      Object {
        "name": "age",
        "onChange": [Function],
      }
    }
    label="Age"
    meta={
      Object {
        "error": "Please enter an age between 1 and 120",
        "touched": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <StyledHoc>
           
          Age
           
        </StyledHoc>,
        <HintText>
           
          Enter a value between 1 and 120
           
        </HintText>,
        <StyledHoc>
          Please enter an age between 1 and 120
        </StyledHoc>,
        <UNDEFINED
          error="Please enter an age between 1 and 120"
          name="age"
          onChange={[Function]}
          type="number"
        />,
      ],
      "error": "Please enter an age between 1 and 120",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            " ",
            "Age",
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          "Age",
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            " ",
            "Enter a value between 1 and 120",
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          "Enter a value between 1 and 120",
          " ",
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Please enter an age between 1 and 120",
        },
        "ref": null,
        "rendered": "Please enter an age between 1 and 120",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "error": "Please enter an age between 1 and 120",
          "name": "age",
          "onChange": [Function],
          "type": "number",
        },
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-htpNat",
            "isStatic": true,
            "rules": Array [
              "
  width: 65px;
",
            ],
          },
          "displayName": "Styled(Input)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-htpNat",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <StyledHoc>
             
            Age
             
          </StyledHoc>,
          <HintText>
             
            Enter a value between 1 and 120
             
          </HintText>,
          <StyledHoc>
            Please enter an age between 1 and 120
          </StyledHoc>,
          <UNDEFINED
            error="Please enter an age between 1 and 120"
            name="age"
            onChange={[Function]}
            type="number"
          />,
        ],
        "error": "Please enter an age between 1 and 120",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              " ",
              "Age",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "Age",
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              " ",
              "Enter a value between 1 and 120",
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            "Enter a value between 1 and 120",
            " ",
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Please enter an age between 1 and 120",
          },
          "ref": null,
          "rendered": "Please enter an age between 1 and 120",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "error": "Please enter an age between 1 and 120",
            "name": "age",
            "onChange": [Function],
            "type": "number",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "rules": Array [
                "
  width: 65px;
",
              ],
            },
            "displayName": "Styled(Input)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
